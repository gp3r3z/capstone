import{s as g,l as t,A as s,G as r,x as o}from"./index.093cd462.js";class c{async getGames(){const e=await g.get("games?page_size=24");t.log("getting games",e.data),s.games=e.data.results.map(a=>new r(a)),s.nextPage=e.data.next,s.prevPage=e.data.previous}async switchPage(e){const a=await g.get(e);t.log(a.data),s.games=a.data.results.map(n=>new r(n)),s.prevPage=a.data.previous,s.nextPage=a.data.next}async getGamesByGenres(e){const a=await g.get(`games?genres=${e}&page_size=24`);t.log("getting games by genre",a.data),s.games=a.data.results.map(n=>new r(n))}async getGameById(e){t.log("Passing the ID ",e);const a=await g.get(`games/${e}`);this.getGameIdsScreenShots(a.data),s.activeGame=new r(a.data)}async getGameIdsScreenShots(e){t.log("gettingScreenShots");const a=await g.get(`games/${e.slug}/screenshots`);s.activeGame.screenshots=a.data.results}async getAllGenres(){const e=await g.get("genres");t.log("all genres",e.data)}async getGroupsByGameId(e){const a=await o.get(`api/groups/${e}/game`);t.log("[Getting groups by GAMEID ]",e,` 
 ResponseData`,a.data),s.groups=a.data}async searchQuery(e){t.log("Here is the search param ",e);const a=await g.get(`games?search=${e}`);t.log("getting games by search",a.data),s.games=a.data.results.map(n=>new r(n))}}const l=new c;export{l as g};
